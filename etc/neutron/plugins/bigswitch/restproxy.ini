# Config file for neutron-proxy-plugin.

[restproxy]
# All configuration for this plugin is in section '[restproxy]'
#
# The following parameters are supported:
#   servers     :   <host:port>[,<host:port>]*  (Error if not set)
#   server_auth  :   <username:password>         (default: no auth)
#   server_ssl   :   True | False                (default: False)
#   sync_data   :   True | False                (default: False)
#   server_timeout   :  10                       (default: 10 seconds)
#   neutron_id: <string>                         (default: neutron-<hostname>)
#   add_meta_server_route: True | False          (default: True)
#

# A comma separated list of BigSwitch or Floodlight servers and port numbers. The plugin proxies the requests to the BigSwitch/Floodlight server, which performs the networking configuration. Note that only one server is needed per deployment, but you may wish to deploy multiple servers to support failover.
servers=localhost:8080

# The username and password for authenticating against  the BigSwitch or Floodlight controller.
# server_auth=username:password

# If True, Use SSL when connecting to the BigSwitch or Floodlight controller.
# server_ssl=True

# Sync data on connect
# sync_data=True

# Maximum number of seconds to wait for proxy request to connect and complete.
# server_timeout=10

# User defined identifier for this Neutron deployment
# neutron_id =

# Flag to decide if a route to the metadata server should be injected into the VM
# add_meta_server_route = True

[nova]
# Specify the VIF_TYPE that will be controlled on the Nova compute instances
#    options: ivs or ovs
#    default: ovs
# vif_type = ovs

# Overrides for vif types based on nova compute node host IDs
# Comma separated list of host IDs to fix to a specific VIF type
# The VIF type is taken from the end of the configuration item
# node_override_vif_<vif_type>
# For example, the following would set the VIF type to IVS for
# host-id1 and host-id2
# node_overrride_vif_ivs=host-id1,host-id2

[router]
# Specify the default router rules installed in newly created tenant routers
# Specify multiple times for multiple rules
# Format is <tenant>:<source>:<destination>:<action>
# Optionally, a comma-separated list of nexthops may be included after <action>
# Use an * to specify default for all tenants
# Default is any any allow for all tenants
# tenant_default_router_rule=*:any:any:permit

# Maximum number of rules that a single router may have
# Default is 200
# max_router_rules=200
