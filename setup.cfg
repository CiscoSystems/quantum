[metadata]
name = quantum
version = 2013.2
summary = OpenStack Networking
description-file =
    README.rst
author = OpenStack
author-email = openstack-dev@lists.openstack.org
home-page = http://www.openstack.org/
classifier =
    Environment :: OpenStack
    Intended Audience :: Information Technology
    Intended Audience :: System Administrators
    License :: OSI Approved :: Apache Software License
    Operating System :: POSIX :: Linux
    Programming Language :: Python
    Programming Language :: Python :: 2
    Programming Language :: Python :: 2.7
    Programming Language :: Python :: 2.6

[files]
packages =
    quantum
data_files =
    etc/quantum =
        etc/api-paste.ini
        etc/dhcp_agent.ini
        etc/l3_agent.ini
        etc/lbaas_agent.ini
        etc/metadata_agent.ini
        etc/policy.json
        etc/quantum.conf
        etc/rootwrap.conf
    etc/quantum/rootwrap.d =
        etc/quantum/rootwrap.d/dhcp.filters
        etc/quantum/rootwrap.d/iptables-firewall.filters
        etc/quantum/rootwrap.d/l3.filters
        etc/quantum/rootwrap.d/lbaas-haproxy.filters
        etc/quantum/rootwrap.d/linuxbridge-plugin.filters
        etc/quantum/rootwrap.d/nec-plugin.filters
        etc/quantum/rootwrap.d/openvswitch-plugin.filters
        etc/quantum/rootwrap.d/ryu-plugin.filters
    etc/init.d = etc/init.d/quantum-server
    etc/quantum/plugins/bigswitch = etc/quantum/plugins/bigswitch/restproxy.ini
    etc/quantum/plugins/brocade = etc/quantum/plugins/brocade/brocade.ini
    etc/quantum/plugins/cisco = etc/quantum/plugins/cisco/cisco_plugins.ini
    etc/quantum/plugins/hyperv = etc/quantum/plugins/hyperv/hyperv_quantum_plugin.ini
    etc/quantum/plugins/linuxbridge = etc/quantum/plugins/linuxbridge/linuxbridge_conf.ini
    etc/quantum/plugins/metaplugin = etc/quantum/plugins/metaplugin/metaplugin.ini
    etc/quantum/plugins/midonet = etc/quantum/plugins/midonet/midonet.ini
    etc/quantum/plugins/ml2 = etc/quantum/plugins/ml2/ml2_conf.ini
    etc/quantum/plugins/mlnx = etc/quantum/plugins/mlnx/mlnx_conf.ini
    etc/quantum/plugins/nec = etc/quantum/plugins/nec/nec.ini
    etc/quantum/plugins/nicira = etc/quantum/plugins/nicira/nvp.ini
    etc/quantum/plugins/openvswitch = etc/quantum/plugins/openvswitch/ovs_quantum_plugin.ini
    etc/quantum/plugins/plumgrid = etc/quantum/plugins/plumgrid/plumgrid.ini
    etc/quantum/plugins/ryu = etc/quantum/plugins/ryu/ryu.ini
scripts =
    bin/quantum-rootwrap

[global]
setup-hooks =
    pbr.hooks.setup_hook
    quantum.hooks.setup_hook

[entry_points]
console_scripts =
    quantum-check-nvp-config = quantum.plugins.nicira.check_nvp_config:main
    quantum-db-manage = quantum.db.migration.cli:main
    quantum-debug = quantum.debug.shell:main
    quantum-dhcp-agent = quantum.agent.dhcp_agent:main
    quantum-dhcp-agent-dnsmasq-lease-update = quantum.agent.linux.dhcp:Dnsmasq.lease_update
    quantum-hyperv-agent = quantum.plugins.hyperv.agent.hyperv_quantum_agent:main
    quantum-l3-agent = quantum.agent.l3_agent:main
    quantum-lbaas-agent = quantum.services.loadbalancer.drivers.haproxy.agent:main
    quantum-linuxbridge-agent = quantum.plugins.linuxbridge.agent.linuxbridge_quantum_agent:main
    quantum-metadata-agent = quantum.agent.metadata.agent:main
    quantum-mlnx-agent = quantum.plugins.mlnx.agent.eswitch_quantum_agent:main
    quantum-nec-agent = quantum.plugins.nec.agent.nec_quantum_agent:main
    quantum-netns-cleanup = quantum.agent.netns_cleanup_util:main
    quantum-ns-metadata-proxy = quantum.agent.metadata.namespace_proxy:main
    quantum-openvswitch-agent = quantum.plugins.openvswitch.agent.ovs_quantum_agent:main
    quantum-ovs-cleanup = quantum.agent.ovs_cleanup_util:main
    quantum-ryu-agent = quantum.plugins.ryu.agent.ryu_quantum_agent:main
    quantum-server = quantum.server:main
quantum.ml2.type_drivers =
    flat = quantum.plugins.ml2.drivers.type_flat:FlatTypeDriver
    local = quantum.plugins.ml2.drivers.type_local:LocalTypeDriver
    vlan = quantum.plugins.ml2.drivers.type_vlan:VlanTypeDriver

[build_sphinx]
all_files = 1
build-dir = doc/build
source-dir = doc/source

[extract_messages]
keywords = _ gettext ngettext l_ lazy_gettext
mapping_file = babel.cfg
output_file = quantum/locale/quantum.pot

[compile_catalog]
directory = quantum/locale
domain = quantum

[update_catalog]
domain = quantum
output_dir = quantum/locale
input_file = quantum/locale/quantum.pot
